# docker-compose.yml

services:
  redis:
    image: redis:alpine
    container_name: creative-catalyst-redis
    ports:
      - "6379:6379"
    profiles: ["app"]

  chroma:
    image: chromadb/chroma:latest
    container_name: creative-catalyst-chroma
    ports:
      - "${CHROMA_EXTERNAL_PORT:-8000}:8000"
    volumes:
      - ./chroma_cache:/chroma/.chroma/server/
    profiles: ["app"]

  api:
    build:
      context: .
      target: production
    container_name: creative-catalyst-api
    ports:
      - "9500:9500"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
      chroma:
        condition: service_started
    profiles: ["app"]

  worker:
    build:
      context: .
      target: production
    container_name: creative-catalyst-worker
    command: /usr/local/bin/arq api.worker_settings.WorkerSettings
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - GEMINI_API_KEY
      - DALLE_API_KEY
      - SENTRY_DSN
      - ENABLE_IMAGE_GENERATION
      - IMAGE_GENERATION_MODEL
      - REDIS_URL
      - ASSET_BASE_URL
      - CREATIVE_CATALYST_API_URL
      - CHROMA_SERVER_HOST
      - CHROMA_SERVER_PORT
    depends_on:
      redis:
        condition: service_started
      chroma:
        condition: service_started
    profiles: ["app"]

  tester:
    # This service is built from the 'development' stage, which has pytest.
    build:
      context: .
      target: development
    command: sleep infinity # Keep it running if needed, though 'run' is one-off.
    env_file:
      - .env
    environment:
      - GEMINI_API_KEY
      - DALLE_API_KEY
      - SENTRY_DSN
      - ENABLE_IMAGE_GENERATION
      - IMAGE_GENERATION_MODEL
      - REDIS_URL
      - ASSET_BASE_URL
      - CREATIVE_CATALYST_API_URL
      - CHROMA_SERVER_HOST
      - CHROMA_SERVER_PORT
    profiles: ["test"]

  clear-cache:
    build: .
    entrypoint: ""
    command: ["python", "-m", "clear_cache", "-y"]
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
    profiles: ["tasks"]